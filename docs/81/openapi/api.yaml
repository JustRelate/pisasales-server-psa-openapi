openapi: 3.0.3

info:
  version: '1.0'
  title: REST API
  description: Default endpoints of the PisaSales REST API

paths:
  /api/companies/{id}:
    get:
      summary: Fetch a single company
      description: Searches the PSC_GID of a company
      tags:
        - companies
      parameters:
        - $ref: '#/components/parameters/id_path'
        - $ref: '#/components/parameters/user_query'
        - $ref: '#/components/parameters/language_query'
      responses:
        '200':
          $ref: '#/components/responses/company'
        '400':
          $ref: '#/components/responses/error_400'
        '401':
          $ref: '#/components/responses/error_401'
        '403':
          $ref: '#/components/responses/error_403'
        '404':
          $ref: '#/components/responses/error_404'
        '500':
         $ref: '#/components/responses/error_500'
    put:
      summary: Update a company
      description: Searches the PSC_GID of a company and updates it
      tags:
        - companies
      parameters:
        - $ref: '#/components/parameters/id_path'
        - $ref: '#/components/parameters/user_query'
        - $ref: '#/components/parameters/language_query'
      requestBody:
        description: company data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/company_update'
      responses:
        '200':
          $ref: '#/components/responses/company'
        '400':
          $ref: '#/components/responses/error_400'
        '401':
          $ref: '#/components/responses/error_401'
        '403':
          $ref: '#/components/responses/error_403'
        '404':
          $ref: '#/components/responses/error_404'
        '500':
         $ref: '#/components/responses/error_500'

  /api/search-companies:
    post:
      summary: Search companies
      description: Searches multiple companies and returns them as an ordered list
      tags:
        - companies
      parameters:
        - $ref: '#/components/parameters/user_query'
        - $ref: '#/components/parameters/language_query'
        - $ref: '#/components/parameters/continuation_query'
      requestBody:
        description: query
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/query'
      responses:
        '200':
          $ref: '#/components/responses/companies'
        '400':
          $ref: '#/components/responses/error_400'
        '401':
          $ref: '#/components/responses/error_401'
        '403':
          $ref: '#/components/responses/error_403'
        '404':
          $ref: '#/components/responses/error_404'
        '500':
         $ref: '#/components/responses/error_500'
  /api/companies:
    post:
      summary: Create a company
      description: ''
      tags:
        - companies
      parameters:
        - $ref: '#/components/parameters/user_query'
        - $ref: '#/components/parameters/language_query'
      requestBody:
        description: company data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/company_update'
      responses:
        '200':
          $ref: '#/components/responses/company'
        '400':
          $ref: '#/components/responses/error_400'
        '401':
          $ref: '#/components/responses/error_401'
        '403':
          $ref: '#/components/responses/error_403'
        '404':
          $ref: '#/components/responses/error_404'
        '500':
         $ref: '#/components/responses/error_500'
  
  /api/addresses/{id}:
    put:
      summary: Update an address
      description: Searches an address record and then updates it
      tags:
        - addresses
      parameters:
        - $ref: '#/components/parameters/id_path'
        - $ref: '#/components/parameters/user_query'
        - $ref: '#/components/parameters/language_query'
      requestBody:
        description: address data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/address_update'
      responses:
        '200':
          $ref: '#/components/responses/address'
        '400':
          $ref: '#/components/responses/error_400'
        '401':
          $ref: '#/components/responses/error_401'
        '403':
          $ref: '#/components/responses/error_403'
        '404':
          $ref: '#/components/responses/error_404'
        '500':
         $ref: '#/components/responses/error_500'
         
  /api/documents/{id}:
    get:
      summary: Fetch a single document
      description: Searches the PSC_GID of a document
      tags:
        - documents
      parameters:
        - $ref: '#/components/parameters/id_path'
        - $ref: '#/components/parameters/user_query'
        - $ref: '#/components/parameters/language_query'
      responses:
        '200':
          $ref: '#/components/responses/document'
        '400':
          $ref: '#/components/responses/error_400'
        '401':
          $ref: '#/components/responses/error_401'
        '403':
          $ref: '#/components/responses/error_403'
        '404':
          $ref: '#/components/responses/error_404'
        '500':
         $ref: '#/components/responses/error_500'
  
  /api/documents:
    post:
      summary: Create a new document
      description: ''
      tags:
        - documents
      parameters:
        - $ref: '#/components/parameters/user_query'
        - $ref: '#/components/parameters/language_query'
      requestBody:
        description: document data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/document_update'
      responses:
        '200':
          $ref: '#/components/responses/document'
        '400':
          $ref: '#/components/responses/error_400'
        '401':
          $ref: '#/components/responses/error_401'
        '403':
          $ref: '#/components/responses/error_403'
        '404':
          $ref: '#/components/responses/error_404'
        '500':
         $ref: '#/components/responses/error_500'

  /api/documents/blob/{id}:
    get:
      summary: Get the BLOB of a document
      description: Returns the BLOB that is associated with a document
      tags:
        - documents
      parameters:
        - $ref: '#/components/parameters/id_path'
        - $ref: '#/components/parameters/user_query'
      responses:
        '200':
          description: binary data
          content:
            application/octet-stream: {}
        '400':
          $ref: '#/components/responses/error_400'
        '401':
          $ref: '#/components/responses/error_401'
        '403':
          $ref: '#/components/responses/error_403'
        '404':
          $ref: '#/components/responses/error_404'
        '500':
         $ref: '#/components/responses/error_500'

  /api/my/contact:
    get:
      summary: Get my data
      description: Returns the data of the user that is authorized with IAM
      tags:
        - my
      parameters:
        - $ref: '#/components/parameters/language_query'
      responses:
        '200':
          $ref: '#/components/responses/person'
        '400':
          $ref: '#/components/responses/error_400'
        '401':
          $ref: '#/components/responses/error_401'
        '403':
          $ref: '#/components/responses/error_403'
        '404':
          $ref: '#/components/responses/error_404'
        '500':
         $ref: '#/components/responses/error_500'

  /api/messages:
    post:
      summary: Send an internal message
      description: Sends a message to multiple recipients
      tags:
        - messages
      parameters:
        - $ref: '#/components/parameters/user_query'
        - $ref: '#/components/parameters/language_query'
      requestBody:
        description: message data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/message'
      responses:
        '200':
          description: message was sent
        '400':
          $ref: '#/components/responses/error_400'
        '401':
          $ref: '#/components/responses/error_401'
        '403':
          $ref: '#/components/responses/error_403'
        '404':
          $ref: '#/components/responses/error_404'
        '500':
         $ref: '#/components/responses/error_500'
components:
  ########################################################################
  # parameters
  ########################################################################
  parameters:
    id_path:
      in: path
      name: id
      description: PSC_GID of the record
      required: true
      schema:
        type: string

    user_query:
      in: query
      name: user
      description: PisaCubes user name. This user will be used for the session.
      schema:
        type: string

    language_query:
      in: query
      name: language
      description: language identifier (e.g. GER or ENG). Used for the getter and setter on data objects.
      schema:
        type: string

    continuation_query:
      in: query
      name: continuation
      description: continuation key that was returned with the last result list
      schema:
        type: string

  ########################################################################
  # responses
  ########################################################################
  responses:
    company:
      description: company data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/company_select'

    companies:
      description: a list of companies
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/companies'

    person:
      description: person data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/person_select'

    address:
      description: address data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/address_select'

    document:
      description: document data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/document_select'

    error_400:
      description: BAD_REQUEST
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/error.configuration.ambiguous'
              - $ref: '#/components/schemas/error.configuration.not_found'
              - $ref: '#/components/schemas/error.invalid.id'

    error_401:
      description: UNAUTHORIZED
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/error.credentials.invalid'
              - $ref: '#/components/schemas/error.credentials.ambiguous'
              - $ref: '#/components/schemas/error.credentials.unknown_user'
              - $ref: '#/components/schemas/error.auth_missing'

    error_403:
      description: FORBIDDEN
      content:
        application/json:
          schema:
              $ref: '#/components/schemas/error.record.access.no_read'

    error_404:
      description: NOT_FOUND
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/error.record.not_found'
              - $ref: '#/components/schemas/error.record.ambiguous'

    error_500:
      description: INTERNAL_SERVER_ERROR
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error.unexpected_error'
  schemas:
    ########################################################################
    # objects
    ########################################################################
    query:
      type: object
      description: xxx
      properties:
        query:
          type: object
          description: query
          additionalProperties:
            type: string
          example: {
            'group_id': 'PSA_ORG_LEA', 
            'PSC_CRE': '>=$TIME-1W'
          }
        sort:
          type: array
          items:
            type: object
            additionalProperties:
              type: boolean
            example: {'PSC_CRE': false}
        maximum:
          type: number
          description: maximum number of records to return with a single request
          example: 20

    object:
      type: object
      properties:
        id:
          type: string
          description: identifier of the record
        created_at:
          type: string
          description: creation date of this record
        created_by:
          type: string
          description: user name of the person who has created this record
        modified_at:
          type: string
          description: last modification date of this record
        modified_by:
          type: string
          description: user name of the person who was the last one to modify this record

    contact_mapped:
      type: object
      properties:
        name:
          type: string
          description: contact name
        mail_lock:
          type: string
          description: mail lock
        email:
          type: string
          description: email address
        group_id:
          type: string
          description: group ID
        status_id:
          type: string
          description: status ID
        telephone:
          type: string
          description: commercial telephone number
        fax number:
          type: string
          description: fax

    contact_update:
      type: object
      allOf:
        - $ref: '#/components/schemas/contact_mapped'
      properties:
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/address_update'

    contact_select:
      type: object
      allOf:
        - $ref: '#/components/schemas/object'
        - $ref: '#/components/schemas/contact_mapped'
      properties:
        group:
          type: string
          description: group
        status:
          type: string
          description: status
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/address_select'
          
    company_mapped:
      type: object
      allOf:
        - $ref: '#/components/schemas/contact_mapped'
      properties:
        parent_company_id:
          type: string
          description: ID of the parent company
        turnover:
          type: number
          description: turnover value
        employees:
          type: number
          description: number of employees
        url:
          type: string
          description: web site
        region_id:
          type: string
          description: region ID
        industry_id:
          type: string
          description: industry ID

    company_select:
      type: object
      allOf:
        - $ref: '#/components/schemas/contact_select'
        - $ref: '#/components/schemas/company_mapped'
      properties:
        child_company_ids:
          type: array
          description: IDs of the child companies
          items:
            type: string
        region:
          type: string
          description: region of the company
        industry:
          type: string
          description: industry of the company
          
    company_update:
      type: object
      allOf:
        - $ref: '#/components/schemas/contact_update'
        - $ref: '#/components/schemas/company_mapped'
  
    companies:
      type: object
      properties:
        continuation:
          type: string
          description: key that is used to fetch the next result page
        results:
          type: array
          items:
            $ref: '#/components/schemas/company_select'

    person_mapped:
      type: object
      allOf:
        - $ref: '#/components/schemas/contact_mapped'
      properties:
        company_id:
          type: string
          description: ID of the associated company
        position:
          type: string
          description: position in the company

    person_select:
      type: object
      allOf:
        - $ref: '#/components/schemas/contact_select'
        - $ref: '#/components/schemas/person_mapped'
      properties:
        company_name:
          type: string
          description: name of the associated company

    address_mapped:
      type: object
      properties:
        type_id:
          type: string
          description: address type identifier
        street:
          type: string
          description: street name
        house_number:
          type: string
          description: house number
        street_additional:
          type: string
          description: additional street information
        street_composed:
          type: string
          description: composed street name
        postal_code:
          type: string
          description: postal code
        city:
          type: string
          description: city
        box:
          type: string
          description: P.O. box
        box_postal_code:
          type: string
          description: P.O. box postal code
        composed:
          type: string
          description: composed address

    address_update:
      type: object
      allOf:
        - $ref: '#/components/schemas/address_mapped'
      properties:
        country:
          type: object
          properties:
            identifier:
              type: string
              description: identifier
  
    address_select:
      type: object
      allOf:
        - $ref: '#/components/schemas/address_mapped'
      properties:
        id:
          type: string
          description: identifier of the record
        type:
          type: string
          description: address type
        country:
          $ref: '#/components/schemas/country_select'

    country_select:
      type: object
      properties:
        identifier:
          type: string
          description: identifier
        name:
          type: string
          description: name
        iso_code:
          type: string
          description: ISO 3166 code

    document_mapped:
      type: object
      properties:
        subject:
          type: string
          description: subject
        number:
          type: string
          description: number
        version:
          type: string
          description: version (version.revision)
          example: '3.2'
        type_id:
          type: string
          description: type identifier
        language_id:
          type: string
          description: language identifier

    document_select:
      type: object
      allOf:
        - $ref: '#/components/schemas/object'
        - $ref: '#/components/schemas/document_mapped'
      properties:
        type:
          type: string
          description: type
        author:
          type: string
          description: author
        language:
          type: string
          description: language
        file_type:
          type: string
          description: type of the binary data
          example: 'DOCX'
        blob:
          type: string
          description: id for fetching the BLOB of this document

    document_update:
      type: object
      allOf:
        - $ref: '#/components/schemas/document_mapped'
      properties:
        blob_data:
          type: string
          description: Base64 encoded BLOB data.

    message:
      type: object
      properties:
        sender:
          type: string
          description: sender (email or PSC_GID)
          example: 'user@justrelate.com'
        recipients:
          type: array
          description: recipients (email or PSC_GID
          items:
            type: string
          example: ['user@justrelate.com', 'D1E9954702698E6BE030C8C029015B96']
        subject:
          type: string
          description: subject of the message
          example: 'title'
        text:
          type: string
          description: message text
          example: 'long text'
        record_id:
          type: string
          description: PSC_GID of the associated record
          example: '10222F712BB9440C9D5AC7DFB236E1AC'
        record_data_object:
          type: string
          description: data object of the associated record
          example: 'PSA_ORG_EXT'

    ########################################################################
    # errors
    ########################################################################
    error.configuration.ambiguous:
      type: object
      description: the REST API configuration is ambiguous (there are multiple endpoints defined for this request)
      properties:
        code:
          type: string
          example: 'configuration.ambiguous'
        error:
          type: string
          example: 'The configuration is ambiguous'
        details:
          type: object
          properties:
            direction:
              type: string
              example: 'IN'
            method:
              type: string
              example: 'GET'
            path:
              type: string
              example: 'companies'
  
    error.configuration.not_found:
      type: object
      description: to configuration was found for this request
      properties:
        code:
          type: string
          example: 'configuration.not_found'
        error:
          type: string
          example: 'The configuration was not found'
        details:
          type: object
          properties:
            direction:
              type: string
              example: 'IN'
            method:
              type: string
              example: 'GET'
            path:
              type: string
              example: 'companies'
  
    error.invalid.id:
      type: object
      description: The PSC_GID is invalid
      properties:
        code:
          type: string
          example: 'invalid.id'
        error:
          type: string
          example: 'The ID is invalid'
        details:
          type: object
          properties:
            id:
              type: string
              example: '0E2C21327EB848EE8768E71C5DD2C83D'
  
    error.credentials.invalid:
      type: object
      description: The provided credentials are invalid
      properties:
        code:
          type: string
          example: 'credentials.invalid'
        error:
          type: string
          example: 'The provided credentials are invalid'

    error.auth_missing:
      type: object
      description: Authentication is missing
      properties:
        code:
          type: string
          example: 'auth_missing'
        error:
          type: string
          example: 'authentication missing'

    error.credentials.ambiguous:
      type: object
      description: The provided credentials are ambiguous
      properties:
        code:
          type: string
          example: 'credentials.ambiguous'
        error:
          type: string
          example: 'The provided credentials are ambiguous'
        details:
          type: object
          properties:
            email:
              type: string
              example: 'info@justrelate.com'

    error.credentials.unknown_user:
      type: object
      description: The provided credentials belong to an unknwon user
      properties:
        code:
          type: string
          example: 'credentials.unknown_user'
        error:
          type: string
          example: 'The provided credentials belong to an unknwon user'
        details:
          type: object
          properties:
            email:
              type: string
              example: 'info@justrelate.com'

    error.record.access.no_read:
      type: object
      description: No read access on the record
      properties:
        code:
          type: string
          example: 'record.access.no_read'
        error:
          type: string
          example: 'No read access on the record'
        details:
          type: object
          properties:
            dto:
              type: string
              example: 'PSA_ORG_EXT'
            id:
              type: string
              example: '0E2C21327EB848EE8768E71C5DD2C83D'

    error.record.not_found:
      type: object
      description: The record was not found
      properties:
        code:
          type: string
          example: 'record.not_found'
        error:
          type: string
          example: 'The record was not found'
        details:
          type: object
          properties:
            dto:
              type: string
              example: 'PSA_ORG_EXT'
            id:
              type: string
              example: '0E2C21327EB848EE8768E71C5DD2C83D'

    error.record.ambiguous:
      type: object
      description: The record is ambiguous
      properties:
        code:
          type: string
          example: 'record.ambiguous'
        error:
          type: string
          example: 'The record is ambiguous'
        details:
          type: object
          properties:
            dto:
              type: string
              example: 'PSA_ORG_EXT'
            email:
              type: string
              example: 'info@justrelate.com'

    error.unexpected_error:
      type: object
      description: Unexpected error
      properties:
        code:
          type: string
          example: 'unexpected_error'
        error:
          type: string
          example: 'Unexpected error'
        details:
          type: object
          properties:
            stack:
              type: string
            text:
              type: string
            parameter:
              type: string
